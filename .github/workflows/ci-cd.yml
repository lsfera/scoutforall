name: CI/CD

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  fmt:
    name: check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo fmt -- --check
  test:
    name: tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo test --all --all-features
  release:
    name: release
    needs: [fmt, test]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: tar.gz
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      # linux
      - name: install openssl (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev
      # macOS
      - name: install openssl (macOS)
        if: runner.os == 'macOS'
        run: brew install openssl@3
      - name: set openssl env (macOS)
        if: runner.os == 'macOS'
        run: |
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$(brew --prefix openssl@3)/lib/pkgconfig" >> $GITHUB_ENV
      # windows
      - name: setup vcpkg (Windows)
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgArguments: openssl:x64-windows
          vcpkgTriplet: x64-windows
      - name: set openssl env (Windows)
        if: runner.os == 'Windows'
        run: echo "OPENSSL_DIR=${{ env.VCPKG_ROOT }}/installed/x64-windows" >> $GITHUB_ENV
      - name: build binary
        shell: bash
        run: |
          case "${{ matrix.target }}" in
            *apple-darwin*|*windows-msvc*)
              cargo build --release --target ${{ matrix.target }}
              ;;
            *)
              cross build --release --target ${{ matrix.target }}
              ;;
          esac
      - name: package binary
        run: |
          mkdir dist
          BIN_NAME=$(basename $(grep '^name' Cargo.toml | head -n1 | cut -d '"' -f2))
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -r ../../../dist/${BIN_NAME}-${{ matrix.target }}.zip $BIN_NAME.exe
          else
            tar czf ../../../dist/${BIN_NAME}-${{ matrix.target }}.tar.gz $BIN_NAME
          fi
      - name: upload artifact
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
